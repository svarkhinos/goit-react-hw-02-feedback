{"version":3,"sources":["components/Statistics/Statistics.module.css","components/FeedbackOptions/FeedbackOptions.module.css","components/Section/Section.module.css","components/Notification/Notification.module.css","App.js","components/FeedbackOptions/FeedbackOptions.js","components/Statistics/Statistics.js","components/Section/Section.js","components/Notification/Notification.js","index.js"],"names":["module","exports","positivePercentage","FeedbackOptions","options","onLeaveFeedback","className","s","control","map","option","index","type","btn","onClick","Statistics","good","neutral","bad","total","count","Section","title","children","section","Notification","message","positiveFeedback","App","state","countTotalFeedback","countPositiveFeedbackPercentage","Math","round","setState","prevState","value","Object","keys","this","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+HACAA,EAAOC,QAAU,CAAC,MAAQ,4B,iBCA1BD,EAAOC,QAAU,CAAC,QAAU,iCAAiC,IAAM,+B,oBCAnED,EAAOC,QAAU,CAAC,QAAU,2B,gBCA5BD,EAAOC,QAAU,CAAC,QAAU,gC,iECQxBC,E,oGCgBWC,EAtBS,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,QAASC,EAAsB,EAAtBA,gBAClC,OACE,mCACE,qBAAKC,UAAWC,IAAEC,QAAlB,SACGJ,EAAQK,KAAI,SAACC,EAAQC,GAAT,OACX,wBACEC,KAAK,SACLN,UAAWC,IAAEM,IAEbC,QAAS,kBAAMT,EAAgBM,IAJjC,SAMGD,GAHIC,W,gBCuBFI,EA/BI,SAAC,GAAuD,IAArDC,EAAoD,EAApDA,KAAMC,EAA8C,EAA9CA,QAASC,EAAqC,EAArCA,IAAKC,EAAgC,EAAhCA,MAAOjB,EAAyB,EAAzBA,mBAC/C,OACE,gCACE,uCACQ,sBAAMI,UAAWC,IAAEa,MAAnB,SAA2BJ,OAEnC,0CACW,sBAAMV,UAAWC,IAAEa,MAAnB,SAA2BH,OAEtC,sCACO,sBAAMX,UAAWC,IAAEa,MAAnB,SAA2BF,OAElC,wCACS,sBAAMZ,UAAWC,IAAEa,MAAnB,SAA2BD,OAEpC,mDACqB,IACnB,uBAAMb,UAAWC,IAAEa,MAAnB,UAA2BlB,EAA3B,e,gBCNOmB,EAXC,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SACxB,OACE,0BAASjB,UAAWC,IAAEiB,QAAtB,UACGF,GAAS,6BAAKA,IADjB,IAC+BC,M,iBCQpBE,EAXM,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACtB,OACE,mCACE,mBAAGpB,UAAWC,IAAEmB,QAAhB,SAA0BA,OJC5BP,EAAQ,EACRQ,EAAmB,EAGjBC,E,4MACJC,MAAQ,CACNb,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGPY,mBAAqB,WAEnB,OADAX,GAAS,G,EAIXY,gCAAkC,WAEhC,OADA7B,EAAqB8B,KAAKC,MAAON,EAAmBR,EAAS,M,EAI/Dd,gBAAkB,SAAAM,GAOhB,OANA,EAAKmB,qBACS,IAAVnB,IACFgB,GAAoB,GAGtB,EAAKI,kCACE,EAAKG,UAAS,SAAAC,GACnB,IAAMC,EAAQC,OAAOC,KAAKH,GAAWxB,GACrC,OAAO,eACJyB,EAAQD,EAAUC,GAAS,O,4CAKlC,WACE,OACE,6CAEE,cAAC,EAAD,CAASd,MAAM,wBAAf,SACE,cAAC,EAAD,CACElB,QAAS,CAAC,OAAQ,UAAW,OAC7BC,gBAAiBkC,KAAKlC,oBAG1B,cAAC,EAAD,CAASiB,MAAM,aAAf,SACa,IAAVH,EACC,cAAC,EAAD,CAAcO,QAAQ,sBAEtB,cAAC,EAAD,CACEV,KAAMuB,KAAKV,MAAMb,KACjBC,QAASsB,KAAKV,MAAMZ,QACpBC,IAAKqB,KAAKV,MAAMX,IAChBC,MAAOA,EACPjB,mBAAoBA,a,GAnDhBsC,aA4DHZ,IKlEfa,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.5e21b17c.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"count\":\"Statistics_count__3fFWE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"control\":\"FeedbackOptions_control__2rLIB\",\"btn\":\"FeedbackOptions_btn__1zzem\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"Section_section__2S_wX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"Notification_message__1tZuL\"};","import { Component } from 'react';\n\nimport FeedbackOptions from './components/FeedbackOptions/FeedbackOptions';\nimport Statistics from './components/Statistics/Statistics';\nimport Section from './components/Section/Section';\nimport Notification from './components/Notification/Notification';\n\nlet total = 0;\nlet positiveFeedback = 0;\nlet positivePercentage;\n\nclass App extends Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n\n  countTotalFeedback = () => {\n    total += 1;\n    return total;\n  };\n\n  countPositiveFeedbackPercentage = () => {\n    positivePercentage = Math.round((positiveFeedback / total) * 100);\n    return positivePercentage;\n  };\n\n  onLeaveFeedback = index => {\n    this.countTotalFeedback();\n    if (index === 0) {\n      positiveFeedback += 1;\n    }\n\n    this.countPositiveFeedbackPercentage();\n    return this.setState(prevState => {\n      const value = Object.keys(prevState)[index];\n      return {\n        [value]: prevState[value] + 1,\n      };\n    });\n  };\n\n  render() {\n    return (\n      <div>\n        Homework-2\n        <Section title=\"Please leave feedback\">\n          <FeedbackOptions\n            options={['good', 'neutral', 'bad']}\n            onLeaveFeedback={this.onLeaveFeedback}\n          />\n        </Section>\n        <Section title=\"Statistics\">\n          {total === 0 ? (\n            <Notification message=\"No feedback given\" />\n          ) : (\n            <Statistics\n              good={this.state.good}\n              neutral={this.state.neutral}\n              bad={this.state.bad}\n              total={total}\n              positivePercentage={positivePercentage}\n            />\n          )}\n        </Section>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import PropTypes from 'prop-types';\nimport s from './FeedbackOptions.module.css';\n\nconst FeedbackOptions = ({ options, onLeaveFeedback }) => {\n  return (\n    <>\n      <div className={s.control}>\n        {options.map((option, index) => (\n          <button\n            type=\"button\"\n            className={s.btn}\n            key={index}\n            onClick={() => onLeaveFeedback(index)}\n          >\n            {option}\n          </button>\n        ))}\n      </div>\n    </>\n  );\n};\nFeedbackOptions.propTypes = {\n  options: PropTypes.arrayOf(PropTypes.string),\n  onLeaveFeedback: PropTypes.func,\n};\nexport default FeedbackOptions;\n","import PropTypes from 'prop-types';\nimport s from './Statistics.module.css';\n\nconst Statistics = ({ good, neutral, bad, total, positivePercentage }) => {\n  return (\n    <div>\n      <p>\n        Good: <span className={s.count}>{good}</span>\n      </p>\n      <p>\n        Neutral: <span className={s.count}>{neutral}</span>\n      </p>\n      <p>\n        Bad: <span className={s.count}>{bad}</span>\n      </p>\n      <p>\n        Total: <span className={s.count}>{total}</span>\n      </p>\n      <p>\n        Positive feedback:{' '}\n        <span className={s.count}>{positivePercentage} %</span>\n      </p>\n    </div>\n  );\n};\n\nStatistics.propTypes = {\n  good: PropTypes.number,\n  neutral: PropTypes.number,\n  bad: PropTypes.number,\n  total: PropTypes.number,\n  positivePercentage: PropTypes.number,\n};\n\nexport default Statistics;\n","import PropTypes from 'prop-types';\nimport s from './Section.module.css';\n\nconst Section = ({ title, children }) => {\n  return (\n    <section className={s.section}>\n      {title && <h2>{title}</h2>} {children}\n    </section>\n  );\n};\nSection.propTypes = {\n  title: PropTypes.string,\n  children: PropTypes.node,\n};\nexport default Section;\n","import PropTypes from 'prop-types';\nimport s from './Notification.module.css';\n\nconst Notification = ({ message }) => {\n  return (\n    <>\n      <p className={s.message}>{message}</p>\n    </>\n  );\n};\n\nNotification.propTypes = {\n  message: PropTypes.string,\n};\nexport default Notification;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}